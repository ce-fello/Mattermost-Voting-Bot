version: '3.8'

services:
  app:
    platform: linux/amd64
    build:
      context: .
      args:
        - PLATFORM=linux/amd64
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    env_file: .env
    restart: unless-stopped

  mattermost:
    image: mattermost/mattermost-team-edition
    env_file: .env
    ports:
      - "8065:8065"
    volumes:
      - mattermost_data:/mattermost/data
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:14
    env_file: .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  tarantool:
    image: tarantool/tarantool:2.10
    ports:
      - "3301:3301"
    volumes:
      - ./init.lua:/opt/tarantool/init.lua:ro
      - tarantool_data:/var/lib/tarantool
    env_file: .env
    healthcheck:
      test: ["CMD", "tarantool", "-e", "require('tarantool').ping()"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  postgres_data:
  tarantool_data:
  mattermost_data: